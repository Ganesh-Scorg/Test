1)principal questions(on 12th Sep 17)
-Project architecture.
-Roles and responsibilities.
-Model Tv as class.
-Cloning? why it is used? if from some class i create object of some other class will that also be clonable?
https://howtodoinjava.com/core-java/cloning/a-guide-to-object-cloning-in-java/

-Why we require getter setter?
-Abstract class vs interface?
https://www.codeproject.com/articles/11155/abstract-class-versus-interface

-why not always use abstract class.
-Equals and hashcode, why should we override both?
-Syntax and code.
-use of comparable and comparator? When to use which?
-Syntax and code.
-Can i insert null element in tree set?
-Will my collection of custom object get sorted even if i dont implement comparable?
-When should we use comparable vs comparator.
-serialization and its use? is it required for only while sending through network.
-You said for persisting in DB, how we save object directly in DB?
-Marker interface?
-Static block code, tried to increment non static variable in static block.
-Can i explicitly call static block?
-root element in treeset, how it checks for first element ? Does it check after adding all elements or while adding itself?
-Spring jdbc ,how you inject dependency?
-Diff between annotation and xml configuration.?
-Does annotation really avoid all xml configuration?
-design pattern in wrapper classes.
-static block sequence in case of inheritance.
-build tool in project.
-Testing in project?
-How many branches in SVN?
-How many QA and dev?
-In maven suppose i want to reuse some external dependency already defined , how can i do that?
 

2nd technical round:
-          Agile, end to end process.
-          What you do if you feel, you cannot complete particular task within time?
-          Exception handling, what happens if we write broader exception and then restrictive exception.
-          What happens if I write sysout after return statement?
-          How can we remove duplicate from arraylist.
-          Abstract class vs interface
-          Why java does not support multiple inteheritence, in case of diamond problem how and where does ambiguity occur exactly.
-          Threading, extending thread class vs implementing runnable interface.
-          Spring MVC flow.
-          How does dispatcher servlet know which controller to call?
 
 
MR Round:
-Project .
-How you handle exception in project.
-How you handle transaction management in project.
-How you tackle challenging problems.
-How you get with other team members.
-Apart from your normal routine have you developed something extra on your own(Tool/Software).
-How does spring jdbc insert data.

2)sourcehow java interview questions :

1.can we pass null to public boolean m1(String s) return (s==null||s.length()==0)
2)static arr a[]; a[1]=10;main() -> what will be result. dont remember question.
3)try
{
sop(10);
throw new exception
sop(11);
return;
}
catch(someexception e)
{
sop(12);
}
catch(Exception e)
{
sop(13);
}
finally
{
sop(14)
}
4)Singleton? threadsafe singleton
5)difference between arraylist and linked list.
6)paren class of exception.
7)diff between jdbc and spring jdbc.
8)what will happen if i start thread and then manually call run method ,
like t.start();
t.run();
9) Can we catch stackoverflow error, lets say some situation where we dont want application to stop and handle stackover flow exception then?


3)Aurustech Interview on 19 sep:

1st Round:
-Print even odd program using wait notify.
-Why wait and notify are in object class, their use.
-Difference between wait and sleep, so is lock release in case on sleep.
-volatile variable, difference between volatile and instance variable in multi threading.
-int i=+10 and int j+=10, what will be i and j values.
-overloading vs overriding. rules for access modifiers and exceptions.
-Covariant return types.
-exception rules in case of over loading and overriding.
-Why we cannot increase scope of exception in case of overriding.
-can we create object of System and Runtime class?
-hashmap internal working?
-so do we require equals comparison while retrieving from particular bucket if it contains only one element?
-what happens when you dont override equals and hashcode method.
-What is hashmap formulae.
-Different memory areas of JVM, what is there in method area of JVM.
-Can we convert long to interger.
-Why we have hashmap rehashes when it reaches 75 % of its capacity (in case of default)
-which method arraylist uses to copy old array to new array.
-In Linked list it maintains insertion order so how does it know how to link elenmets in memory.
-Why default load factor is 10 in case of arraylist.
-what is identity and weak hashmap?
-suppose in overloading two three show method and i pass null, which method it would call, show(object o),show(Integer i),show(String s).
-String typical question, how many many objects questions, string s = new string("Ashish") , s1=s+"Hello"
-can we call run method directly in thread?
-Transaction management in your project?

2nd Round:
-Difference between cross join and inner join.
-Simple question about how many rows in case of left and right join.
-program to print frequency of each character in string.
internal implementation of wait and notify.
-Time complexity, for that program and how to make it more efficient.


4)FIS interview questions

1st round:
-how is password saved in your project?
- How many tables you worked.
-Password policy? how you save password? wch encryption? how you validate the password? decryption and encryption? 
-eid,ename,did,dame list you have , find ->  count(emp) count(emp per department) in java
- How have you used transacition management in your project? said no, asked why you dont use.
-employee(ename,eid) department(dname,did) form a relationship and give me query for list of employee with department.
-equals and hashcode.
- How to inject singleton bean with prototype scope bean as reference.
-synchronization.


2nd round:
-List and set difference.
-generics , use?
-xml vs jason , when to use which?
-bean id=e1 class = employee
bean id e2 class=employee, so here how many objects are created, because scope is singleton.
- comparable vs comparator
-what is use of executor framework.
-how hashmap works internally
-Equals and hashcode.

5) Globant questions:
 
-Take car example and implement oops concepts.
-Self join query typical.
-Hashmap internal working.
- Equals ,hashcode.
- Palindrom program using single loop.
- abstract private , how it is inhereted.
-i want to code cat(run, hairy,tail,eat),bat(fly,2legs,color,eat),sparrow(fly,beak,eat).
- suppose i want am fetching some data from database using select and order by, and i want to retain ordering when i insert some new data from frontend , then which collection i will use.
- Suppose i dont want ordering and just faster retrieval and insertion then?
synechron Interview questions:

1st round:
-arrange join statement words in proper order.(where, group by, order by,from, select,having)
-object class methods.
-jsp implicit objects.
-how to write custom tags in jsp.
-difference between callable and runnable.
-equals, hashcode with syntax.
-different methods of collections class.
-SPring scopes?
-Which spring scopes are threadsafe.
-write string reverse program , with and without recursion.
- Spring life cycle methods.
-difference between concurrenthashmap and hashmap.
-suppose i want to create readonly list then?
-fail fast and fail safe iterator? give me real examples of both types.
-callable vs runnable.

2nd Round:
-mvc flow
-list vs set
-fail fast vs failsafe
-Default bucket size of hashmap, and how do i change it?
-difference between concurrenthashmap and hashmap.
-why change job?
-bean scopes 
--bean id=e1 class = employee
bean id e2 class=employee, so here how many objects are created, because scope is singleton.
-bean lifecycle methods? what are callback methods?
-runnable vs callable.

one network interview:
- singleton question
-servlet config vs servlet context
- whats the use of methods in object class
-why init and destroy method, why not use constructor and finalize in servlet.
-what internal collection used in session.setattribute.
-comparable vs comparator
-string literal graph, what about gc?
-controller ? what is controller is it annotation or configuration you write in xml file.
-how would you code a mvc architecture
-servlet life cycle.
- before generics what was used for type casting
-where does these loop like for if, come in java, i mean what we import for that?

One of my friends Interview Experience:
Interview Questions
Volkswagen:
1) TDD with login page and add number to set. how to preserver the order with set.
2) Second largest number in array.
3) Controller and controller as Angular JS 1
4) Spring boot advantage

Wipro interview questions
1.Oops
2.Diff bw  Strinbuffer and builder
3.Auto boxing and unboxing
4.how many ways to create the object
5. Is there any possibility to create the object without calling constructor
6.What are the data types available in Java
7. What are the access modifiers in Java
8. Purpose default, private ,public and protected
9.Serialization and deserialization
10.difference bw exception and error
11. What is the purpose of exception handling.
12. Any relationship between runtime exception and compile time error

Hibernate:
1.difference between merge and update

Spring.
1.what is MVC pattern
2. What is IOC and types of DI.
3.what is auto wiring
4. What is Spring MVC flow and what will happen when user sends request.
5. What is restful webservice

IBM test:
All design patterns

Barclay's
1. How to implement custom closable resource in Java 7 when we use try with resource
2.is constructor called when we deseralize the object
3.where you implemented dynamic polymorphism in your project explain with the code
4. Write your own interface which will add, get,delete like collection list
5.how you will design/ implement in hibernate when one parent has 2 child classes

DST DST interview questions:
1.difference between struts MVC and spring MVC
2.d bw pathparam and query parameters in rest
3.How to secure Java servlet application
4.d bw unique and primary key
5.what is the purpose of with clause


Techmahundra
1. How many objects are created when bean has 2 different IDs with same class with Singleton scope
2.

Softcell interview questions
1. How you provide the security if hacker created some script and hitting the button continusly
2. Helicafter can fly, airplane can fly and run.. This is the statement tell me how many classes and interface you create

3.write the program to find sum of matrix diagonal s
4. Write a program to reverse a string with same possion of special characters if string has special characters

Synychron interview questions
1. Explain hibernate relationships with the example
2.hibernate inheritance with example
3. How you have implemented joins in hibernate in your project and explain
4. What is second level cache and how to store object in second level cache
5. How many annotations you used for spring in your project and explain
6. When to use path parameters and query parameters in rest service
7.Steps to write rest service
8. Difference between foreign key and primary key
9. Inner and outer join syntax
10. Explain about Singleton , factory and abstract factory design patterns
11.benefits of using interunnable

Cognizant and FiS
1.Can we define static method in Interface ?
2.How to delete a String object in Heap memory ?
3.How can you access private method from outside of a class ??
4. Finding 3rd highest salary ?
5. How to find duplicates in a string Word ?
6. Reverse a string without reverse method ?
7. Internal implementatiin of arrayList ?
8.FetchType and FetchMode in hibernate ?
9.caching level in hibernate ?
10.what is profile in Spring ?
11.How to redirect to another method ?
11.How to use multiple datasource and manage them in Spring ?
12. One transaction made changes and befor commiting another transaction is trying to read the data how to solve this problem ?
13.Create ur on HashMap ?
14.callable and runnable

Barclays
1. Implementation of immutable class which has reference of another class
2. Exception handling with method who throws null pointer exception
3. Contract between equals and hashcode method
4. Parent class and child class default and parameterized constructor 
5. Accessing private attribute of parent from child with super keyword
6. Static, Synchronised methods in class and calling to them on various, same object of class with multiple threads
7. Volatile keywords
8. Sharing any object between threads
9. Collections
10. Internal workings of Hashmap, hashset, hashtable.
11. Concurrent Hashmap
12. Features of Java 1.8
13. Parent class and child class, accessing of various methods in them and object is of child and reference is of parent.
14. toString method internal call
15. Difference between ArrayList and linkedlist
16. Internal Data structure used by ArrayList.
17. By default size of Hashmap, ArrayList, hashset and how they grow and when they grow?(is there any threshold value to that they increase the size or when size gets full and if new elements come it increases the size)
18. Class level lock, objectsclass
19. Calling static variable of class
20. Hibernate first level cache and second level cache. And in which level they are present
21. Hibernate classes/ interfaces
22. Difference between save, merge, Persist and load, get
23. Which protocols are used by rest and soap
24. How these soap and rest web service work
25. Spring annotations
26. Scope of a spring bean with example
27. Aspect Oriented Programming / AOP 
28. Autowiring in spring
29. Spring boot
30. Spring Dependency injection ways (getter,setter and constructor)
31. Spring bean with scope singleton and has reference of a bean which is prototype what will happen
32. Spring : class A has reference of B and class B has reference of A. Will it get initialise?
33. Why strings are immutable
34. String initialisation with = and new 
35. Exception handling in spring and in webservices
36. Spring MVC flow in detail
37. Executor framework for multi threading
38. Callable interface
39. Markup/marker interface. If we create interface without any methods in it will it become markup interface
40. Thread creation ways
41. What is AWS/ cloud computing
42. Programs
a. Travelling through array, start with 0 index take the value and consider it as a next index. Go to next index by taking value of previous index. Iterate it till you get -1 as a value and find how many values are present/you travel
b. Return true if given array get sorted in ascending order by just swapping any two elements.
eg. 7 2 5 6 1 -> true (swap 7&1)
 4 7 2 8 5 -> false
1 2 3 4 -> true
1 5 3 3 7 -> true

TIAA

1. Internal data structures used by Hashmap and treemap
2. BigO notation
3. Thread safe singleton
4. Bubble sort and Linear sort
 binary search/sort
5. Webservices soap and rest difference.
6. Change in response of rest and soap 
7. Created Serialized object then change in class and de Serialized
8. Data structures
9. Synchronisation
10. Volatile keyword

Infosys interview questions:
1. Comparable and comparator with set and arraylist for emp class

2. Diff between linked and arralist

3 how make sure that set don't allow duplicates for customized objects

4. Sleep and yield

5.object class methods
6.transient keyword
7. Bean life cycle and IOC
8. @autowired and @qualifier
9. Purpose of spring boot
10. Struts flow

Barclay's
1. How to implement custom closable resource in Java 7 when we use try with resource
2.is constructor called when we deseralize the object
3.where you implemented dynamic polymorphism in your project explain with the code
4. Write your own interface which will add, get,delete like collection list
5.how you will design/ implement in hibernate when one parent has 2 child classes

